/*!
One-line description.

More detailed description, with

# Example

YYYYY

*/

use crate::DataStore;

// ------------------------------------------------------------------------------------------------
// Public Macros
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Public Types
// ------------------------------------------------------------------------------------------------

pub struct FileSystemStore {}

// ------------------------------------------------------------------------------------------------
// Public Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Types
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Implementations
// ------------------------------------------------------------------------------------------------

impl DataStore for FileSystemStore {
    type Error = crate::error::Error;

    fn exists(&self) -> bool {
        todo!()
    }

    fn init(&self) -> Result<(), Self::Error> {
        todo!()
    }

    fn connect(&self) -> Result<(), Self::Error> {
        todo!()
    }

    fn ledgers(&self) -> Result<Box<dyn crate::EntityStore>, Self::Error> {
        todo!()
    }

    fn journals(&self) -> Result<Box<dyn crate::EntityStore>, Self::Error> {
        todo!()
    }

    fn disconnect(&self) -> Result<(), Self::Error> {
        Ok(())
    }
}

// ------------------------------------------------------------------------------------------------
// Private Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Modules
// ------------------------------------------------------------------------------------------------

pub mod customer;

pub mod journal;

pub mod ledger;
