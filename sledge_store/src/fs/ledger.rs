/*!
One-line description.

More detailed description, with

# Example

YYYYY

*/

use crate::error::Error;
use sledge_model::ledger::Ledger;
use std::path::Path;
use tracing::trace;

// ------------------------------------------------------------------------------------------------
// Public Macros
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Public Types
// ------------------------------------------------------------------------------------------------

pub(super) const LEDGER_SUB_DIR: &str = "ledgers/";

// ------------------------------------------------------------------------------------------------
// Public Functions
// ------------------------------------------------------------------------------------------------

pub(super) fn create_ledgers<P>(root_path: P, ledgers: &[Ledger]) -> Result<(), Error>
where
    P: AsRef<Path>,
{
    trace!(
        "Create {} ledgers in sub-directory {}",
        content.ledgers.len(),
        LEDGER_SUB_DIR
    );
    let path = root_path.as_ref().join(LEDGER_SUB_DIR);
    fs::create_dir_all(&path)?;
}

// ------------------------------------------------------------------------------------------------
// Private Types
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Implementations
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Modules
// ------------------------------------------------------------------------------------------------
